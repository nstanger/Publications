%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox: 16 657 378 828%%Title: (EPS template1)%%Creator: (Microsoft Excel: LaserWriter 8 8.6)%%CreationDate: (5:21 PM Monday, 16 November 1998)%%For: (Nigel Stanger)%%Routing: (mailto:\000nigel.stanger@stonebow.otago.ac.nz)%%Pages: 1%%DocumentFonts: Helvetica%%DocumentNeededFonts: Helvetica%%DocumentSuppliedFonts:%%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Portrait%%DocumentMedia: Default 594.96 841.92 0 () ()%RBINumCopies: 1%RBINupNess: 1 1%ADO_ImageableArea: 13.44 12 581.76 829.68%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaultsuserdict/dscInfo 5 dict dup begin/Title(EPS template1)def/Creator(Microsoft Excel: LaserWriter 8 8.6)def/CreationDate(5:21 PM Monday, 16 November 1998)def/For(Nigel Stanger)def/Pages 1 defend put%%BeginProlog/md 235 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: lw8_feature-1.01%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved./bd{bind def}bind def/ld{load def}bd/xs{exch store}bd/Z{0 def}bd/T true def/F false def/level2/languagelevel where{pop languagelevel 2 ge}{F}ifelsedef/odictstk Z/oopstk Z/fcl{count oopstk sub dup 0 gt{{pop}repeat}{pop}ifelsecountdictstack odictstk sub dup 0 gt{{end}repeat}{pop}ifelse}bd/sfcl2{/odictstk countdictstack storecount/oopstk xs}bd/efcl2{stopped{$error/newerror F put}iffcl}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bd/setcopies{level2{1 dict begin/NumCopies exch def currentdict end setpagedevice}{userdict/#copies 3 -1 roll put}ifelse}deflevel2 startnoload/ststpgdev{}def/dopgdev{}def/stpgdev{}def/buf Z/didstop T def/sfcl{/didstop T store/odictstk countdictstack storecount/oopstk xscurrentfile cvx stopped{$error/newerror F putdidstop{save/didstop xs/buf vmstatus exch sub exch pop dup 0 lt{pop 0}ifdup 64000 gt{pop 64000}if string store{currentfile buf readline{(}efcl)eq{exit}if}{/UnexpectedEOF errordict/rangecheck get exec}ifelse}loopdidstop restore}if}iffcl}bd/efcl{/didstop F storeexecstop}bdlevel2 endnoload level2 not startnoload/setpagedevice where{pop/realstpgdev/setpagedevice ld}if/SC_topddict Z/SC_spdict Z/$spusrdict F def/dopgdev{userdict/setpagedevice undef$spusrdict{userdict/setpagedevice/realstpgdev load put/$spusrdict F store}ifSC_topddict realstpgdev}bd/stpgdev{SC_topddict dup 3 -1 roll{SC_spdict 2 index known{SC_spdict 2 index getdup 3 -1 roll{put dup}forallpop put dup}{put dup}ifelse}forallpop pop}bd/ststpgdev{/setpagedevice where{userdict eq{/$spusrdict T store}if}ifuserdict/setpagedevice/stpgdev load put/SC_topddict 0 dict store/SC_spdict 3 dict begin/InputAttributes 0 dict def/Policies 0 dict def/OutputAttributes 0 dict defcurrentdictendstore}def/sfcl/sfcl2 ld/efcl/efcl2 ldlevel2 not endnoload%%EndFile%%BeginFile: lw8_basic-3.0/xdf{exch def}bd/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath12{ld}repeat/framewidth -1 def/QDframwid -1 def/numframes Z/mTS matrix def/$m matrix def/av 86 def/por T def/normland F def/psb-nosave{}def/pse-nosave{}def/us Z/psb{/us save store}bd/pse{us restore}bd/level3/languagelevel where{pop languagelevel 3 ge}{F}ifelsedeflevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/devg/DeviceGray def/devr/DeviceRGB def/devc/DeviceCMYK deflevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/devg[/DeviceGray]def/devr[/DeviceRGB]def/devc[/DeviceCMYK]deflevel2 not endnoload/pm Z/mT Z/sD Z/initializepage{mT $m currentmatrix mTS concatmatrix pop/pm save store mT concat}bd/endp{pm restore}bd/adjRect{dup 2 mul 6 2 roll4 index sub exch 5 -1 roll sub exch4 2 roll4 index add exch 5 -1 roll add exch4 2 roll}bd/frame1up{gSmTS setmatrixQDframwid lw/setstrokeadjust where{pop T setstrokeadjust}ifclippath pathbbox2 index sub exch3 index sub exchcurrentlinewidth framewidth muladjRectnumframes dup 0 lt{pop 0}if{4 copyrScurrentlinewidth framewidthmul 4 muladjRect}repeatpop pop pop popgR}bd/$c devr def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFilelevel3 startnoload%%BeginFile: lw8_safeclipL12-1.0					/rectclip where{pop/rCa/rectclip ld}{/rCa{np 01 index length 4 idiv{2 copy4 getintervalaload pop4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:K4 add}repeatclip nppop pop}bd}ifelse/savedstack Z/subsavedstack Z/execstring Z/saferCa{/execstring xs/odictstk countdictstack store/oopstk 0 storecount 0 ne{savedstack 0 eq{count 100 gt{count}{100}ifelsearray/savedstack xs}{count savedstack length gt{count array/savedstack xs}if}ifelsecount savedstack 0 3 -1 rollgetintervalastore/subsavedstack xs}{/subsavedstack 0 store}ifelseexecstring cvx stopped{$error/newerror F putnewpath}iffclsubsavedstack 0 ne{subsavedstack aload pop}if}bd%%EndFilelevel3 endnoload level3 not startnoload%%BeginFile: lw8_safeclipL3-1.0	/saferCa/pop ld%%EndFilelevel3 not endnoload%%BeginFile: lw8_level1_colorspace-2.0/G/setgray ld/:F1/setgray ld/:F/setrgbcolor ld/:F4/setcmykcolor where{pop/setcmykcolor ld}{{3{dup3 -1 roll adddup 1 gt{pop 1}if1 exch sub4 1 roll}repeatpopsetrgbcolor}bd}ifelse/:Fx{counttomark{0{G}0{:F}{:F4}}exch getexecpop}bd/$cs Z/:rg{devr :ss}bd/:sc{$cs :ss}bd/:dc{dup type/arraytype eq{0 get}ifdup/DeviceCMYK eq{pop devc}{/DeviceGray eq{devg}{devr}ifelse}ifelse/$cs xdf}bd/:sgl{}def/:dr{}bd/:fCRD{pop}bd/:ckcs{}bd/:ss{/$c xdf}bd%%EndFilelevel2 startnoload%%BeginFile: lw8_level1_patterns-2.0/patfreq Z/patangle Z/bk Z/fg Z/docolorscreen Z/graystring Z/pattransf{}def/initQDpatterns{/patfreq 9.375 store/patangle1 0 $m defaultmatrix dtransformexch atanpor not{90 add}ifnormland{180 add}ifstore:a}def/docolorscreen/setcolorscreen where{pop/currentcolorscreen where{pop/setcmykcolor where{pop T}{F}ifelse}{F}ifelse}{F}ifelsedef/setgraypattern{/graystring xspatfreqpatangle{1 add4 mulcvigraystringexch getexch1 add 4 mulcvi7 subbitshift1 and}setscreen64 div setgray}bd/:b{/pattransf load settransferpop pop popsetgraypattern}bddocolorscreen startnoload/screensave 5 array def/:a{currentgray currentscreen currenttransfer screensave astore pop}bd/:e{screensave aload pop settransfer setscreen setgray}bd/:d{pop pop pop/pattransf load settransfersetgraypattern 8{pop}repeat}bd/:c/:d lddocolorscreen endnoload docolorscreen not startnoload/screensave 20 array def/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd/rstring Z/grstring Z/blstring Z/convroll{64 div 4 -1 roll}bd/setcolorpattern{/graystring xs/blstring xs/grstring xs/rstring xspatfreqpatangle{1 add 4 mul cvi rstringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}patfreqpatangle{1 add 4 mul cvi grstringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}patfreqpatangle{1 add 4 mul cvi blstringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}patfreqpatangle{1 add 4 mul cvi graystringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}setcolorscreenconvroll convroll convroll convrollsetcmykcolor}bd/:d{pop pop pop/pattransf load settransferpop pop setcolorpattern}bd/:c/:d lddocolorscreen not endnoload%%EndFilelevel2  endnoload level2 not startnoload%%BeginFile: lw8_level2_patterns-2.0/pmtx Z/BGnd Z/FGnd Z/PaintData Z/PatternMtx Z/PatHeight Z/PatWidth Z/$d Z/savecolor 4 array def/savecolorspace Z/patDecode Z/:a{mark 0 0 0 currentcolor savecolor astore pop cleartomark/savecolorspace currentcolorspace store$c setcolorspace/patDecode[currentcolor counttomarkdup 2 add 1rollcleartomark[exch{0 1}repeat]def}bd/:e{savecolorspace setcolorspacemark savecolor aload pop setcolor cleartomark}bd/initQDpatterns{gSinitmatrixmT dup 4 get exch 5 get :T1 0 dtransform round exch round exch idtransformdup mul exch dup mul exch add sqrt0 1 dtransform round exch round exch idtransformdup mul exch dup mul exch add sqrtnegscale0por not{90 add}ifnormland{180 add}ifrotatematrix currentmatrixgR/pmtx xs:a}bd/:t{14 dict begin/BGnd xdf/FGnd xdf/PaintData xdf/PatternType 1 def/PaintType 1 def/BBox[0 0 1 1]def/TilingType 1 def/XStep 1 def/YStep 1 def/PatternMtx[24 0 0 24 0 0]def/PaintProcBGnd null ne{{beginBGnd aload pop :F0 0 1 1 rFFGnd aload pop :F24 24 T PatternMtx PaintData imagemaskend}}{{beginFGnd aload pop :F24 24 T PatternMtx PaintData imagemaskend}}ifelsedefcurrentdictPatternMtxend$c setcolorspacegS pmtx setmatrix makepattern gR}bd/:u{14 dict begin/$d 8 dict def/PatternType 1 def/PaintType 1 def/BBox[0 0 1 1]def/TilingType 1 def/XStep 1 def/YStep 1 def/PaintData xdf/PatHeight xdf/PatWidth xdf/PatternMtx[PatWidth 0 0 PatHeight 0 0]def$d begin/ImageType 1 def/MultipleDataSource F def/Height PatHeight def/Width PatWidth def/Decode patDecode def/ImageMatrix PatternMtx def/DataSource PaintData def/BitsPerComponent 8 defend/PaintProc{begin$d imageend}defcurrentdictPatternMtxendgS $c setcolorspace pmtx setmatrix makepattern gR}bd/bk[1 1 1]def/fg[0 0 0]def/:b{:tsetpatternpop pop}bd/:d{:tsetpattern10{pop}repeat}bd/:c{:usetpattern10{pop}repeat}bd%%EndFilelevel2 not endnoload%%BeginFile: lw8_uniform_graphics-2.0/@a{np :M 0 rl :L 0 exch rl 0 rl :L fill}bd/@b{np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill}bd/@c{moveto 0 rlineto stroke}bd/@w{moveto 0 exch rlineto stroke}bd/arct where{pop}{/arct{arcto pop pop pop pop}bd}ifelse/x1 Z/x2 Z/y1 Z/y2 Z/rad Z/@q{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arctfill}bd/@s{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arct:Kstroke}bd/@i{np 0 360 arc fill}bd/@j{gSnp:Tscale0 0 .5 0 360 arcfillgR}bd/@e{np0 360 arc:Kstroke}bd/@f{np$m currentmatrixpop:Tscale0 0 .5 0 360 arc:K$m setmatrixstroke}bd/@k{gSnp:T0 0 :M0 0 5 2 rollarc fillgR}bd/@l{gSnp:T0 0 :Mscale0 0 .5 5 -2 roll arcfillgR}bd/@m{nparcstroke}bd/@n{np$m currentmatrixpop:Tscale0 0 .5 5 -2 roll arc$m setmatrixstroke}bd%%EndFile%%BeginFile: lw8_bubn-2.1/$t Z/$p Z/$s Z/$o 1. def/2state? F def/ps Zlevel2 startnoload/pushcolor/currentrgbcolor ld/popcolor/setrgbcolor ld/setcmykcolor where{pop/currentcmykcolor where{pop/pushcolor/currentcmykcolor ld/popcolor/setcmykcolor ld}if}iflevel2 endnoload level2 not startnoload/pushcolor{currentcolorspace $c eq{currentcolor currentcolorspace T}{currentcmykcolor F}ifelse}bd/popcolor{{setcolorspace setcolor}{setcmykcolor}ifelse}bdlevel2 not endnoload/pushstatic{2state?$o$t$p$s$csps}bd/popstatic{/ps xs/$cs xs/$s xs/$p xs/$t xs/$o xs/2state? xs}bd/pushgstate{currentpointpushcolorcurrentlinewidthcurrentlinecapcurrentlinejoincurrentdash exch aload lengthnp clippath pathbbox$m currentmatrix aload pop}bd/popgstate{$m astore setmatrix2 index sub exch3 index sub exchrCarray astore exch setdashsetlinejoinsetlinecaplwpopcolornp :M}bd/bu{errordict/nocurrentpoint{pop 0 0}put2state?{pushgstategR}ifpushgstategRpushgstatepushstaticpm restoremTS setmatrix}bd/bn{/pm save storepopstaticpopgstategSpopgstate2state?{gSpopgstate}if}bd/cpat{pop 64 div setgray 8{pop}repeat}bd%%EndFile%%BeginFile: lw8_basic_text-2.1/S/show ld/A{0.0 exch ashow}bd/R{0.0 exch 32 exch widthshow}bd/W{0.0 3 1 roll widthshow}bd/J{0.0 32 4 2 roll 0.0 exch awidthshow}bd/V{0.0 4 1 roll 0.0 exch awidthshow}bd/fcflg T def/fc{fcflg{vmstatus exch sub 50000 lt{(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store}if pop}if}bd/$f[1 0 0 -1 0 0]def/:ff{$f :mf}bd/MacEncoding StandardEncoding 256 array copy defMacEncoding dup 9/space put dup 39/quotesingle put 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacEncoding 128 128 getinterval astore poplevel2 startnoload/copyfontdict{findfont dup length dictbegin{1 index/FID ne{def}{pop pop}ifelse}forall}bd/$ckeyd md def/:skey{1 index maxlength 2 indexlength subge{begin/$mkeys 20 dict def/$mkeys loadenddup/$ckeyd xs}if3 1 roll put}bd/fD1pass{40$ckeyd//mdne{pop 1}if$ckeyd exch:skey}bd/:searchdict Z/:searchdict{exch 2 copyknown{get}{exch/$mkeysget:searchdict}ifelse}bd/lU{//md exch 2 copyknown{get}{exch/$mkeys get:searchdict}ifelse}bd/:xs{exch 0 1 2 index length 1 sub{3 copygsave 1 getinterval show grestoreexchget 0.0rmoveto}for pop pop}bd/:ys{exch 0 1 2 index length 1 sub{3 copygsave 1 getinterval show grestoreexchget 0.0 exchrmoveto}for pop pop}bd/:xys{exch 0 1 2 index length 1 sub{3 copygsave 1 getinterval show grestoreexch 2 mul 2 copy1 add get 3 -2 roll get exchrmoveto}for pop pop}bdlevel2 endnoload level2 not startnoload/copyfontdict{findfont dup length dictcopybegin}bd/fD1pass/def ld/lU/load ldlevel2{/:xs/xshow ld/:ys/yshow ld/:xys/xyshow ld}iflevel2 not endnoload/fD Z/sf Z/scf Z/sf1pass{lU setfont}bd/scf1pass{exch lU exch scalefont fD}bd/scf2pass{scalefont fD}bdmd/fontname known not{/fontname/customfont def}if/Encoding Z/:mre{copyfontdict/Encoding MacEncoding deffontname currentdictenddefinefont :ff fD}bd/:bsr{copyfontdict/Encoding Encoding 256 array copy defEncoding dup}bd/pd{put dup}bd/:esr{pop popfontname currentdictenddefinefont :ff fD}bd/ps Z/fz{/ps xs}bd/cF/currentfont ld/mbf{/makeblendedfont where{popmakeblendedfont/ABlend exch definefont}{pop}ifelsefD}def%%EndFile/currentpacking where {pop sc_oldpacking setpacking}if end%%EndProlog%%BeginSetupmd begin/fD/def ld/sf/setfont ld /scf/scf2pass ld/mT[.24 0 0 -.24 13.44 829.699]definitQDpatterns/sD 16 dict def%%IncludeFont: Helvetica/f44/Helvetica:mre/f58 f44 80 scf/Courier findfont[10 0 0 -10 0 0]:mf setfont%%EndSetup%%Page: 1 1%%BeginPageSetupinitializepage%%EndPageSetupgS 0 0 2368 3407 rC2 lw12 8 1505 711 rC614 10 301 200 rSgS.521 .52 scale1306.805 244.171 :Mf58 sf-.451(Student)AgR614 509 301 200 rS1 G613 508 :Mcurrentpoint 916 711 :Mgsave /psTop exch def /psLeft exch def currentpoint /psBottom exch def /psRight exch def 6 array currentmatrixpsLeft psTop translatepsRight psLeft sub 4371 3790 sub divpsBottom psTop sub 4083 3694 sub divscale 3790 neg 3694 neg translate /psl { lineto } bind def /psm { moveto } bind def newpath 4082 3695 psm 4081 3694 psl 4080 3694 psl 4079 3695 psl 3791 3887 psl 3790 3888 psl 3790 3889 psl 3791 3890 psl 4079 4082 psl 4080 4082 psl 4081 4082 psl 4082 4082 psl 4370 3890 psl 4370 3889 psl 4370 3888 psl 4370 3887 psl 4082 3695 psl 4080 3699 psm 4364 3888 psl 4080 4078 psl 3796 3888 psl 4080 3699 psl eoclipnewpathclosepath0 0 psm setmatrix :a0(\377\377\377\377\377\377\377\377)(\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377)fg bk:b613 508 303 203 rF916 711 :Mgrestore :e1 GgS.521 .52 scale1258.832 1197.786 :M0 Gf58 sf-.205(Assignment)AgR0 G1215 509 300 200 rSgS.521 .52 scale2429.391 1157.411 :Mf58 sf-.18(Assessment)AgRgS.521 .52 scale2423.635 1243.929 :Mf58 sf-.23(Element)AgR14 509 300 200 rSgS.521 .52 scale203.409 1205.476 :Mf58 sf-.378(Staff)AgRnp 315 608 :M314 608 :L314 609 :L313 609 :L313 610 :L314 610 :L314 610 :L614 611 :L615 611 :L615 611 :L615 610 :L615 610 :L615 609 :L615 609 :L315 608 :Leofillnp 347 634 :M347 635 :L347 635 :L348 635 :L348 635 :L349 635 :L349 635 :L349 581 :L349 580 :L349 580 :L349 579 :L348 579 :L348 580 :L347 580 :L347 634 :Leofillnp 363 634 :M363 635 :L364 635 :L364 635 :L365 635 :L365 635 :L365 635 :L366 581 :L366 580 :L366 580 :L365 579 :L365 579 :L364 580 :L364 580 :L363 634 :Leofillnp 564 608 :M564 609 :L563 609 :L563 610 :L564 610 :L564 610 :L565 610 :L615 585 :L615 585 :L615 585 :L615 584 :L615 584 :L615 583 :L614 583 :L564 608 :Leofillnp 565 609 :M565 608 :L564 608 :L564 609 :L563 609 :L563 610 :L564 610 :L614 635 :L614 635 :L615 635 :L615 635 :L615 635 :L615 634 :L615 634 :L565 609 :Leofill1 G53 52 516.5 611 @j0 G55 54 516.5 611 @fgS.521 .52 scale817.473 1053.59 :Mf58 sf.071(marks)AgRnp 766 210 :M766 209 :L765 209 :L765 209 :L764 209 :L763 210 :L763 210 :L764 510 :L765 510 :L765 510 :L766 510 :L766 510 :L766 510 :L766 509 :L766 210 :Leofillnp 740 242 :M739 242 :L739 243 :L738 243 :L738 244 :L739 244 :L739 244 :L794 245 :L794 245 :L795 245 :L795 244 :L795 244 :L795 243 :L794 243 :L740 242 :Leofillnp 740 259 :M739 259 :L739 259 :L738 260 :L738 260 :L739 261 :L739 261 :L794 261 :L794 261 :L795 261 :L795 261 :L795 260 :L795 260 :L794 259 :L740 259 :Leofillnp 766 459 :M766 459 :L765 458 :L765 458 :L764 459 :L763 459 :L763 460 :L788 510 :L789 510 :L790 510 :L790 510 :L791 510 :L791 510 :L791 509 :L766 459 :Leofillnp 766 460 :M766 459 :L766 459 :L765 458 :L765 458 :L764 459 :L763 459 :L738 509 :L738 510 :L739 510 :L739 510 :L740 510 :L741 510 :L741 510 :L766 460 :Leofill1 G767 412 26 @i0 G55 54 766.5 412 @fnp 915 608 :M915 608 :L914 609 :L914 609 :L914 610 :L914 610 :L915 610 :L1215 611 :L1215 611 :L1216 611 :L1216 610 :L1216 610 :L1216 609 :L1215 609 :L915 608 :Leofillnp 966 610 :M966 610 :L966 609 :L966 609 :L965 608 :L965 608 :L964 609 :L914 634 :L914 634 :L914 635 :L914 635 :L915 635 :L915 635 :L916 635 :L966 610 :Leofillnp 965 610 :M965 610 :L966 610 :L966 610 :L966 609 :L966 609 :L965 608 :L915 583 :L915 583 :L914 584 :L914 584 :L914 585 :L914 585 :L915 585 :L965 610 :Leofill1 G1017 611 26 @i0 G1017 611 27 @enp 1182 584 :M1182 584 :L1182 583 :L1181 583 :L1181 584 :L1180 584 :L1180 585 :L1181 639 :L1181 639 :L1182 639 :L1182 639 :L1183 639 :L1183 639 :L1183 638 :L1182 584 :Leofillnp 1166 584 :M1166 584 :L1165 583 :L1165 583 :L1164 584 :L1164 584 :L1164 585 :L1164 639 :L1165 639 :L1165 639 :L1166 639 :L1166 639 :L1166 639 :L1166 638 :L1166 584 :Leofillendpshowpage%%Trailerend%%EOF